// Material 3 styles file.
// Proceed with caution if making changes to this file.
@use 'sass:map';
@use '@angular/material' as mat;
@use './app/app.component-theme' as appRoot;
@use './app/core/components/menu-notifications/menu-notifications.component-theme' as MenuNotifications;
@use './styles-common/settingsTabContent.scss' as settingsTabContent;
@use './app/settings/signalk/signalk.component.scss' as signalk;
@use './app/core//components/configuration/config.component-theme' as config;
@use './app/widgets/widget-wind/widget-wind.component-theme' as widgetWind;
@use './app/widgets/widget-autopilot/widget-autopilot.component-theme' as widgetAp;
@use './app/widgets/widget-race-timer/widget-race-timer.component-theme' as widgetRaceTimer;

@include mat.core();

// Import local Angular Google font and icon styles
@import './assets/google-fonts/material-symbols-outlined.scss';
@import './assets/google-fonts/material-icons.scss';
@import './assets/google-fonts/roboto.scss';
// Import GridStack styles
@import "gridstack/dist/gridstack.min.css";
// Import the Material Design typography and color palettes
@import './themes/dark-m3-theme.scss';

// Get App (dark) CSS theming value
$background: map-get($kip-dark-color, background);

// Get default (dark) KIP CSS theming value
$kip-widget-card-background-color: map-get($kip-dark-color, widget-card-background-color);
$kip-widget-card-border-color: map-get($kip-dark-color, widget-card-border-color);
$kip-widget-action-button-color: map-get($kip-dark-color, widget-action-button-color);
$kip-widget-action-button-foreground-color: map-get($kip-dark-color, widget-action-button-foreground-color);
$kip-widget-action-delete-button-color: map-get($kip-dark-color, widget-action-delete-button-color);

$blue: map-get($kip-dark-color, blue);
$blueDim: map-get($kip-dark-color, blue-dim);
$blueDimmer: map-get($kip-dark-color, blue-dimmer);

$green: map-get($kip-dark-color, green);
$greenDim: map-get($kip-dark-color, green-dim);
$greenDimmer: map-get($kip-dark-color, green-dimmer);

$purple: map-get($kip-dark-color, purple);
$purpleDim: map-get($kip-dark-color, purple-dim);
$purpleDimmer: map-get($kip-dark-color, purple-dimmer);

$yellow: map-get($kip-dark-color, yellow);
$yellowDim: map-get($kip-dark-color, yellow-dim);
$yellowDimmer: map-get($kip-dark-color, yellow-dimmer);

$pink: map-get($kip-dark-color, pink);
$pinkDim: map-get($kip-dark-color, pink-dim);
$pinkDimmer: map-get($kip-dark-color, pink-dimmer);

$orange: map-get($kip-dark-color, orange);
$orangeDim: map-get($kip-dark-color, orange-dim);
$orangeDimmer: map-get($kip-dark-color, orange-dimmer);

$white: map-get($kip-dark-color, white);
$whiteDim: map-get($kip-dark-color, white-dim);
$whiteDimmer: map-get($kip-dark-color, white-dimmer);

$grey: map-get($kip-dark-color, grey);
$greyDim: map-get($kip-dark-color, grey-dim);
$greyDimmer: map-get($kip-dark-color, grey-dimmer);

$port: map-get($kip-dark-color, port);
$starboard: map-get($kip-dark-color, starboard);
$zone-nominal: map-get($kip-dark-color, zone-nominal);
$zone-alert: map-get($kip-dark-color, zone-alert);
$zone-warn: map-get($kip-dark-color, zone-warn);
$zone-alarm: map-get($kip-dark-color, zone-alarm);
$zone-emergency: map-get($kip-dark-color, zone-emergency);

// Write styles
:root {
  // Apply all component css dark theme by default
  @include mat.all-component-themes($dark-theme);
  @include mat.system-level-colors($dark-theme);
  @include mat.system-level-typography($dark-theme);
  @include mat.typography-hierarchy($dark-theme);
  // Apply KIP core component theming
  @include appRoot.theme($dark-theme);
  @include MenuNotifications.theme($dark-theme);
  @include settingsTabContent.theme($dark-theme);
  @include signalk.theme($dark-theme);
  @include config.theme($dark-theme);
  // Apply widget theming
  @include widgetWind.theme($dark-theme);
  @include widgetAp.theme($dark-theme);
  @include widgetRaceTimer.theme($dark-theme);

  // Set app background color
  --sys-background: #{$background};

  // Create KIP global CSS variables
  --kip-nightModeBrightness: 1;
  --kip-widget-card-background-color: #{$kip-widget-card-background-color};
  --kip-widget-card-border-color: #{$kip-widget-card-border-color};
  --kip-widget-card-border-style: solid;
  --kip-widget-card-border-width: 2px;
  --kip-widget-action-button-color: #{$kip-widget-action-button-color};
  --kip-widget-action-button-foreground-color: #{$kip-widget-action-button-foreground-color};
  --kip-widget-action-delete-button-color: #{$kip-widget-action-delete-button-color};

  --kip-blue-color: #{$blue};
  --kip-blue-dim-color: #{$blueDim};
  --kip-blue-dimmer-color: #{$blueDimmer};

  --kip-green-color: #{$green};
  --kip-green-dim-color: #{$greenDim};
  --kip-green-dimmer-color: #{$greenDimmer};

  --kip-purple-color: #{$purple};
  --kip-purple-dim-color: #{$purpleDim};
  --kip-purple-dimmer-color: #{$purpleDimmer};

  --kip-yellow-color: #{$yellow};
  --kip-yellow-dim-color: #{$yellowDim};
  --kip-yellow-dimmer-color: #{$yellowDimmer};

  --kip-pink-color: #{$pink};
  --kip-pink-dim-color: #{$pinkDim};
  --kip-pink-dimmer-color: #{$pinkDimmer};

  --kip-orange-color: #{$orange};
  --kip-orange-dim-color: #{$orangeDim};
  --kip-orange-dimmer-color: #{$orangeDimmer};

  --kip-white-color: #{$white};
  --kip-white-dim-color: #{$whiteDim};
  --kip-white-dimmer-color: #{$whiteDimmer};

  --kip-grey-color: #{$grey};
  --kip-grey-dim-color: #{$greyDim};
  --kip-grey-dimmer-color: #{$greyDimmer};

  --kip-port-color: #{$port};
  --kip-starboard-color: #{$starboard};
  --kip-zone-nominal-color: #{$zone-nominal};
  --kip-zone-alert-color: #{$zone-alert};
  --kip-zone-warn-color: #{$zone-warn};
  --kip-zone-alarm-color: #{$zone-alarm};
  --kip-zone-emergency-color: #{$zone-emergency};
}

// Set base app style
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

html,
body,
app-root {
  height: 100%;
}

body {
  font-family: Roboto, "Helvetica Neue", sans-serif;
  margin: 0;
  touch-action: none;
  filter: brightness(var(--kip-nightModeBrightness));
  backdrop-filter: brightness(var(--kip-nightModeBrightness));
}

app-root {
  display: block;
}

/*
*  Loading Spinner styles. Used during app bootstrap process (while
*  executing app-initNetwork.service but before Angular has fully loaded)
*/
.loader-container {
  height: 100%;
  width: 100%;
  background-color: var(--sys-background);
}

#loader {
  bottom: 0;
  height: 175px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 175px;
}

#loader .dot {
  bottom: 0;
  height: 100%;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 87.5px;
}

#loader .dot::before {
  border-radius: 100%;
  content: "";
  height: 87.5px;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transform: scale(0);
  width: 87.5px;
}

#loader .dot:nth-child(7n+1) {
  transform: rotate(45deg);
}

#loader .dot:nth-child(7n+1)::before {
  animation: 0.8s linear 0.1s normal none infinite running load;
  background: #e5ab13 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+2) {
  transform: rotate(90deg);
}

#loader .dot:nth-child(7n+2)::before {
  animation: 0.8s linear 0.2s normal none infinite running load;
  background: #f0ca31 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+3) {
  transform: rotate(135deg);
}

#loader .dot:nth-child(7n+3)::before {
  animation: 0.8s linear 0.3s normal none infinite running load;
  background: #92c7e9 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+4) {
  transform: rotate(180deg);
}

#loader .dot:nth-child(7n+4)::before {
  animation: 0.8s linear 0.4s normal none infinite running load;
  background: #63afdf none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+5) {
  transform: rotate(225deg);
}

#loader .dot:nth-child(7n+5)::before {
  animation: 0.8s linear 0.5s normal none infinite running load;
  background: #3586ca none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+6) {
  transform: rotate(270deg);
}

#loader .dot:nth-child(7n+6)::before {
  animation: 0.8s linear 0.6s normal none infinite running load;
  background: #d52626 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+7) {
  transform: rotate(315deg);
}

#loader .dot:nth-child(7n+7)::before {
  animation: 0.8s linear 0.7s normal none infinite running load;
  background: #e26767 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+8) {
  transform: rotate(360deg);
}

#loader .dot:nth-child(7n+8)::before {
  animation: 0.8s linear 0.8s normal none infinite running load;
  background: #f8e598 none repeat scroll 0 0;
}

#loader .loading {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  bottom: -40px;
  height: 20px;
  left: 0;
  position: absolute;
  right: 0;
  width: 180px;
}

@keyframes load {
  100% {
    opacity: 0;
    transform: scale(1);
  }
}

@keyframes load {
  100% {
    opacity: 0;
    transform: scale(1);
  }
}
