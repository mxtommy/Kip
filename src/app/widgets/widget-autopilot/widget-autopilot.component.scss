@use '@angular/material' as mat;

:root {
  display: block;
  height: 100%;
  width: 100%;
}

.widget-host {
  display: block;
  height: 100%;
  width: 100%;
}

.button-actions-wrapper {
  display: block;
  width: 50%;
  // max-width: 100px;
  height: auto;
  display: inline-block;
  aspect-ratio: 1;
}

.button-modes-wrapper {
  display: block;
  width: 50%;
  // max-width: 100px;
  height: auto;
  display: inline-block;
  // aspect-ratio: 1;
}

.button-action {
  width: calc(100% - 20px);
  height: calc(100% - 20px);
  margin: 10px;
  padding: 5px;
  border-radius: 12px;
  align-items: center;
  justify-content: center;
  padding: 0;
  cursor: pointer;
  @include mat.button-overrides((
    filled-container-color: var(--kip-blue-color),
  ));
}

.button-mode {
  // width: calc(100% - 20px);
  // height: calc(100% - 20px);
  margin: 10px;
  padding: 5px;
  // border-radius: 12px;
  align-items: center;
  justify-content: center;
  padding: 0;
  cursor: pointer;
  @include mat.button-overrides((
    filled-container-color: var(--kip-blue-dim-color),
  ));
}

.button-standby {
  width: calc(100% - 20px);
  height: calc(100% - 20px);
  margin: 10px;
  padding: 5px;
  border-radius: 12px;
  align-items: center;
  justify-content: center;
  padding: 0;
  cursor: pointer;
  @include mat.button-overrides((
    filled-container-color: var(--kip-zone-alarm-color),
  ));
}

.button-svg {
  width: 100%;
  height: 100%;
  padding: 15% 15% 0% 15%;

  text {
    font-family: Roboto;
    font-size: 21.7023px;
    font-weight: bold;
    text-align: center;
    text-anchor: middle;
    font-style: normal;
    font-variant: normal;
    font-stretch: normal;
    font-variant-ligatures: normal;
    font-variant-caps: normal;
    font-variant-numeric: normal;
    font-variant-east-asian: normal;
    fill: var(--kip-contrast-color);
    fill-opacity: 1;
    stroke: none;
  }
  path {
    fill: none;
    fill-opacity: 0;
    stroke: var(--kip-contrast-color);
    stroke-opacity: 1;
    stroke-width :7.59058;
    stroke-linecap: round;
    stroke-miterlimit: 0;
    stroke-dasharray: none;
  }
  path.tack {
    fill: var(--kip-contrast-color);
    fill-opacity: 1;
    stroke: var(--kip-contrast-color);
    stroke-opacity: 1;
  }
}

.button-mode-svg {
  width: 100%;
  height: 100%;
  text {
    font-family: Roboto;
    font-size: 10px;
    font-weight: bold;
    text-align: center;
    text-anchor: middle;
    font-style: normal;
    font-variant: normal;
    font-stretch: normal;
    font-variant-ligatures: normal;
    font-variant-caps: normal;
    font-variant-numeric: normal;
    font-variant-east-asian: normal;
    fill: var(--kip-contrast-color);
    fill-opacity: 1;
    stroke: none;
  }
}



.apCompass {
  position: relative;
  width: 360px;
  height: 202px;
  margin: auto;
  border-radius: 5px;
}


.autopilotGridBtnContainer {
  display: grid;
  width: fit-content;
  margin: auto;
  margin-top: 5px;
  height: 160px;
  grid-template-columns: [col-start] 25% [col1-end] 25% [col2-end] 25% [col3-end] 25% [col-End];
  grid-template-rows: [row-start] 25% [row1-end] 25% [row2-end] 25% [row3-end] 25% [row-end];
  grid-template-areas:
    ". mute message ."
    "port minus1  plus1 starboard"
    "windmode minus10 plus10 trackmode"
    "standby . . auto1";
  row-gap: 6px;
  column-gap: 4px;
  justify-items: center;
  align-items: center;
  justify-content: center;
  align-content: start;
  --mdc-filled-button-container-shape: 5px;
}

.itemStbTack {
  grid-area: starboard;
}

.itemMute {
  grid-area: mute;
}

.itemMessage {
  grid-area: message;
}

.itemPrtTack {
  grid-area: port;
}

.itemPlus1 {
  grid-area: plus1;
}

.itemMinus1 {
  grid-area: minus1;
}

.itemStandby {
  grid-area: standby;
}

.itemPlus10 {
  grid-area: plus10;
}

.itemMinus10 {
  grid-area: minus10;
}

.itemAuto {
  grid-area: auto1;
}

.itemWindmode {
  grid-area: windmode;
}

.itemTrackmode {
  grid-area: trackmode;
}

.itemNxtWp {
  grid-area: nxtWp;
}
